package com.linkapital.core.services.invoice.datasource.domain;

import com.linkapital.core.services.invoice.contract.enums.InvoiceStatus;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static com.linkapital.core.services.invoice.contract.enums.InvoiceStatus.ACQUISITION;
import static com.linkapital.core.services.invoice.contract.enums.InvoiceStatus.BACK;
import static com.linkapital.core.services.invoice.contract.enums.InvoiceStatus.CANCELLED;
import static com.linkapital.core.services.invoice.contract.enums.InvoiceStatus.ENTRY;
import static com.linkapital.core.services.invoice.contract.enums.InvoiceStatus.INDUSTRIALIZATION;
import static com.linkapital.core.services.invoice.contract.enums.InvoiceStatus.INTEGRATION_SYSTEMS;
import static com.linkapital.core.services.invoice.contract.enums.InvoiceStatus.LAUNCHING;
import static com.linkapital.core.services.invoice.contract.enums.InvoiceStatus.PURCHASE;
import static com.linkapital.core.services.invoice.contract.enums.InvoiceStatus.REMIITTANCES;
import static com.linkapital.core.services.invoice.contract.enums.InvoiceStatus.RETURN;
import static com.linkapital.core.services.invoice.contract.enums.InvoiceStatus.SERVICE_PROVISION;
import static com.linkapital.core.services.invoice.contract.enums.InvoiceStatus.TRANSFERS;
import static com.linkapital.core.services.invoice.contract.enums.InvoiceStatus.VENDA;
import static java.util.stream.Collectors.joining;

public class CfopData {

    public static final Map<Long, InvoiceStatus> codeCfopMap = new HashMap<>();
    private static final List<InvoiceStatus> ADD_TRANSFERS = List.of(TRANSFERS);
    public static final String IN_ADD_TRANSFERS = getIn(ADD_TRANSFERS);
    private static final List<InvoiceStatus> ADD_RETURNS_CANCELLATIONS = Arrays.asList(RETURN, BACK, CANCELLED);
    public static final String IN_ADD_RETURNS_CANCELLATIONS = getIn(ADD_RETURNS_CANCELLATIONS);
    private static final List<InvoiceStatus> ADD_PURCHASES = List.of(PURCHASE);
    public static final String IN_ADD_PURCHASES = getIn(ADD_PURCHASES);

    static {
        /*Compras*/
        codeCfopMap.put(1100L, PURCHASE);
        codeCfopMap.put(1101L, PURCHASE);
        codeCfopMap.put(1102L, PURCHASE);
        codeCfopMap.put(1111L, PURCHASE);
        codeCfopMap.put(1113L, PURCHASE);
        codeCfopMap.put(1116L, PURCHASE);
        codeCfopMap.put(1117L, PURCHASE);
        codeCfopMap.put(1118L, PURCHASE);
        codeCfopMap.put(1120L, PURCHASE);
        codeCfopMap.put(1121L, PURCHASE);
        codeCfopMap.put(1122L, PURCHASE);
        codeCfopMap.put(1126L, PURCHASE);
        codeCfopMap.put(1128L, PURCHASE);
        codeCfopMap.put(1250L, PURCHASE);
        codeCfopMap.put(1251L, PURCHASE);
        codeCfopMap.put(1252L, PURCHASE);
        codeCfopMap.put(1253L, PURCHASE);
        codeCfopMap.put(1254L, PURCHASE);
        codeCfopMap.put(1255L, PURCHASE);
        codeCfopMap.put(1256L, PURCHASE);
        codeCfopMap.put(1257L, PURCHASE);
        codeCfopMap.put(1401L, PURCHASE);
        codeCfopMap.put(1403L, PURCHASE);
        codeCfopMap.put(1406L, PURCHASE);
        codeCfopMap.put(1407L, PURCHASE);
        codeCfopMap.put(1551L, PURCHASE);
        codeCfopMap.put(1556L, PURCHASE);
        codeCfopMap.put(1651L, PURCHASE);
        codeCfopMap.put(1652L, PURCHASE);
        codeCfopMap.put(1653L, PURCHASE);
        codeCfopMap.put(2100L, PURCHASE);
        codeCfopMap.put(2101L, PURCHASE);
        codeCfopMap.put(2102L, PURCHASE);
        codeCfopMap.put(2111L, PURCHASE);
        codeCfopMap.put(2113L, PURCHASE);
        codeCfopMap.put(2116L, PURCHASE);
        codeCfopMap.put(2117L, PURCHASE);
        codeCfopMap.put(2118L, PURCHASE);
        codeCfopMap.put(2120L, PURCHASE);
        codeCfopMap.put(2121L, PURCHASE);
        codeCfopMap.put(2122L, PURCHASE);
        codeCfopMap.put(2126L, PURCHASE);
        codeCfopMap.put(2128L, PURCHASE);
        codeCfopMap.put(2250L, PURCHASE);
        codeCfopMap.put(2251L, PURCHASE);
        codeCfopMap.put(2252L, PURCHASE);
        codeCfopMap.put(2253L, PURCHASE);
        codeCfopMap.put(2254L, PURCHASE);
        codeCfopMap.put(2255L, PURCHASE);
        codeCfopMap.put(2256L, PURCHASE);
        codeCfopMap.put(2257L, PURCHASE);
        codeCfopMap.put(2401L, PURCHASE);
        codeCfopMap.put(2403L, PURCHASE);
        codeCfopMap.put(2406L, PURCHASE);
        codeCfopMap.put(2407L, PURCHASE);
        codeCfopMap.put(2551L, PURCHASE);
        codeCfopMap.put(2556L, PURCHASE);
        codeCfopMap.put(2651L, PURCHASE);
        codeCfopMap.put(2652L, PURCHASE);
        codeCfopMap.put(2653L, PURCHASE);
        codeCfopMap.put(3100L, PURCHASE);
        codeCfopMap.put(3101L, PURCHASE);
        codeCfopMap.put(3102L, PURCHASE);
        codeCfopMap.put(3126L, PURCHASE);
        codeCfopMap.put(3127L, PURCHASE);
        codeCfopMap.put(3128L, PURCHASE);
        codeCfopMap.put(3250L, PURCHASE);
        codeCfopMap.put(3251L, PURCHASE);
        codeCfopMap.put(3551L, PURCHASE);
        codeCfopMap.put(3556L, PURCHASE);
        codeCfopMap.put(3651L, PURCHASE);
        codeCfopMap.put(3652L, PURCHASE);
        codeCfopMap.put(3653L, PURCHASE);

        /*Industrialização*/
        codeCfopMap.put(1124L, INDUSTRIALIZATION);
        codeCfopMap.put(1125L, INDUSTRIALIZATION);
        codeCfopMap.put(2124L, INDUSTRIALIZATION);
        codeCfopMap.put(2125L, INDUSTRIALIZATION);
        codeCfopMap.put(5124L, INDUSTRIALIZATION);
        codeCfopMap.put(5125L, INDUSTRIALIZATION);
        codeCfopMap.put(6124L, INDUSTRIALIZATION);
        codeCfopMap.put(6125L, INDUSTRIALIZATION);

        /*AQUISIÇÕES */
        codeCfopMap.put(1300L, ACQUISITION);
        codeCfopMap.put(1301L, ACQUISITION);
        codeCfopMap.put(1302L, ACQUISITION);
        codeCfopMap.put(1303L, ACQUISITION);
        codeCfopMap.put(1304L, ACQUISITION);
        codeCfopMap.put(1305L, ACQUISITION);
        codeCfopMap.put(1306L, ACQUISITION);
        codeCfopMap.put(1350L, ACQUISITION);
        codeCfopMap.put(1351L, ACQUISITION);
        codeCfopMap.put(1352L, ACQUISITION);
        codeCfopMap.put(1353L, ACQUISITION);
        codeCfopMap.put(1354L, ACQUISITION);
        codeCfopMap.put(1355L, ACQUISITION);
        codeCfopMap.put(1356L, ACQUISITION);
        codeCfopMap.put(1360L, ACQUISITION);
        codeCfopMap.put(1932L, ACQUISITION);
        codeCfopMap.put(1933L, ACQUISITION);
        codeCfopMap.put(2300L, ACQUISITION);
        codeCfopMap.put(2301L, ACQUISITION);
        codeCfopMap.put(2302L, ACQUISITION);
        codeCfopMap.put(2303L, ACQUISITION);
        codeCfopMap.put(2304L, ACQUISITION);
        codeCfopMap.put(2305L, ACQUISITION);
        codeCfopMap.put(2306L, ACQUISITION);
        codeCfopMap.put(2350L, ACQUISITION);
        codeCfopMap.put(2351L, ACQUISITION);
        codeCfopMap.put(2352L, ACQUISITION);
        codeCfopMap.put(2353L, ACQUISITION);
        codeCfopMap.put(2354L, ACQUISITION);
        codeCfopMap.put(2355L, ACQUISITION);
        codeCfopMap.put(2356L, ACQUISITION);
        codeCfopMap.put(2932L, ACQUISITION);
        codeCfopMap.put(2933L, ACQUISITION);
        codeCfopMap.put(3301L, ACQUISITION);
        codeCfopMap.put(3350L, ACQUISITION);
        codeCfopMap.put(3351L, ACQUISITION);
        codeCfopMap.put(3352L, ACQUISITION);
        codeCfopMap.put(3353L, ACQUISITION);
        codeCfopMap.put(3354L, ACQUISITION);
        codeCfopMap.put(3355L, ACQUISITION);
        codeCfopMap.put(3356L, ACQUISITION);

        /*ENTRADAS*/
        codeCfopMap.put(1400L, ENTRY);
        codeCfopMap.put(1500L, ENTRY);
        codeCfopMap.put(1501L, ENTRY);
        codeCfopMap.put(1503L, ENTRY);
        codeCfopMap.put(1504L, ENTRY);
        codeCfopMap.put(1505L, ENTRY);
        codeCfopMap.put(1506L, ENTRY);
        codeCfopMap.put(1555L, ENTRY);
        codeCfopMap.put(1663L, ENTRY);
        codeCfopMap.put(1901L, ENTRY);
        codeCfopMap.put(1903L, ENTRY);
        codeCfopMap.put(1905L, ENTRY);
        codeCfopMap.put(1908L, ENTRY);
        codeCfopMap.put(1910L, ENTRY);
        codeCfopMap.put(1911L, ENTRY);
        codeCfopMap.put(1912L, ENTRY);
        codeCfopMap.put(1915L, ENTRY);
        codeCfopMap.put(1917L, ENTRY);
        codeCfopMap.put(1920L, ENTRY);
        codeCfopMap.put(1923L, ENTRY);
        codeCfopMap.put(1924L, ENTRY);
        codeCfopMap.put(1934L, ENTRY);
        codeCfopMap.put(2400L, ENTRY);
        codeCfopMap.put(2500L, ENTRY);
        codeCfopMap.put(2501L, ENTRY);
        codeCfopMap.put(2503L, ENTRY);
        codeCfopMap.put(2504L, ENTRY);
        codeCfopMap.put(2505L, ENTRY);
        codeCfopMap.put(2506L, ENTRY);
        codeCfopMap.put(2555L, ENTRY);
        codeCfopMap.put(2650L, ENTRY);
        codeCfopMap.put(2663L, ENTRY);
        codeCfopMap.put(2901L, ENTRY);
        codeCfopMap.put(2903L, ENTRY);
        codeCfopMap.put(2905L, ENTRY);
        codeCfopMap.put(2908L, ENTRY);
        codeCfopMap.put(2910L, ENTRY);
        codeCfopMap.put(2911L, ENTRY);
        codeCfopMap.put(2912L, ENTRY);
        codeCfopMap.put(2915L, ENTRY);
        codeCfopMap.put(2917L, ENTRY);
        codeCfopMap.put(2920L, ENTRY);
        codeCfopMap.put(2923L, ENTRY);
        codeCfopMap.put(2924L, ENTRY);
        codeCfopMap.put(2934L, ENTRY);
        codeCfopMap.put(2949L, ENTRY);
        codeCfopMap.put(3000L, ENTRY);
        codeCfopMap.put(3500L, ENTRY);
        codeCfopMap.put(3650L, ENTRY);

        /*Prestacion de servicio*/
        codeCfopMap.put(5301L, SERVICE_PROVISION);
        codeCfopMap.put(5302L, SERVICE_PROVISION);
        codeCfopMap.put(5303L, SERVICE_PROVISION);
        codeCfopMap.put(5304L, SERVICE_PROVISION);
        codeCfopMap.put(5305L, SERVICE_PROVISION);
        codeCfopMap.put(5306L, SERVICE_PROVISION);
        codeCfopMap.put(5307L, SERVICE_PROVISION);
        codeCfopMap.put(5351L, SERVICE_PROVISION);
        codeCfopMap.put(5352L, SERVICE_PROVISION);
        codeCfopMap.put(5353L, SERVICE_PROVISION);
        codeCfopMap.put(5354L, SERVICE_PROVISION);
        codeCfopMap.put(5355L, SERVICE_PROVISION);
        codeCfopMap.put(5356L, SERVICE_PROVISION);
        codeCfopMap.put(5357L, SERVICE_PROVISION);
        codeCfopMap.put(5359L, SERVICE_PROVISION);
        codeCfopMap.put(5360L, SERVICE_PROVISION);
        codeCfopMap.put(5932L, SERVICE_PROVISION);
        codeCfopMap.put(5933L, SERVICE_PROVISION);
        codeCfopMap.put(6301L, SERVICE_PROVISION);
        codeCfopMap.put(6302L, SERVICE_PROVISION);
        codeCfopMap.put(6303L, SERVICE_PROVISION);
        codeCfopMap.put(6304L, SERVICE_PROVISION);
        codeCfopMap.put(6305L, SERVICE_PROVISION);
        codeCfopMap.put(6306L, SERVICE_PROVISION);
        codeCfopMap.put(6307L, SERVICE_PROVISION);
        codeCfopMap.put(6350L, SERVICE_PROVISION);
        codeCfopMap.put(6351L, SERVICE_PROVISION);
        codeCfopMap.put(6352L, SERVICE_PROVISION);
        codeCfopMap.put(6353L, SERVICE_PROVISION);
        codeCfopMap.put(6354L, SERVICE_PROVISION);
        codeCfopMap.put(6355L, SERVICE_PROVISION);
        codeCfopMap.put(6356L, SERVICE_PROVISION);
        codeCfopMap.put(6357L, SERVICE_PROVISION);
        codeCfopMap.put(6359L, SERVICE_PROVISION);
        codeCfopMap.put(6360L, SERVICE_PROVISION);
        codeCfopMap.put(6932L, SERVICE_PROVISION);
        codeCfopMap.put(6933L, SERVICE_PROVISION);
        codeCfopMap.put(7301L, SERVICE_PROVISION);
        codeCfopMap.put(7358L, SERVICE_PROVISION);

        /*VENDAS */
        codeCfopMap.put(5100L, VENDA);
        codeCfopMap.put(5101L, VENDA);
        codeCfopMap.put(5102L, VENDA);
        codeCfopMap.put(5103L, VENDA);
        codeCfopMap.put(5104L, VENDA);
        codeCfopMap.put(5105L, VENDA);
        codeCfopMap.put(5106L, VENDA);
        codeCfopMap.put(5109L, VENDA);
        codeCfopMap.put(5110L, VENDA);
        codeCfopMap.put(5111L, VENDA);
        codeCfopMap.put(5112L, VENDA);
        codeCfopMap.put(5113L, VENDA);
        codeCfopMap.put(5114L, VENDA);
        codeCfopMap.put(5115L, VENDA);
        codeCfopMap.put(5116L, VENDA);
        codeCfopMap.put(5117L, VENDA);
        codeCfopMap.put(5118L, VENDA);
        codeCfopMap.put(5119L, VENDA);
        codeCfopMap.put(5120L, VENDA);
        codeCfopMap.put(5122L, VENDA);
        codeCfopMap.put(5123L, VENDA);
        codeCfopMap.put(5250L, VENDA);
        codeCfopMap.put(5251L, VENDA);
        codeCfopMap.put(5252L, VENDA);
        codeCfopMap.put(5253L, VENDA);
        codeCfopMap.put(5254L, VENDA);
        codeCfopMap.put(5255L, VENDA);
        codeCfopMap.put(5256L, VENDA);
        codeCfopMap.put(5257L, VENDA);
        codeCfopMap.put(5258L, VENDA);
        codeCfopMap.put(5401L, VENDA);
        codeCfopMap.put(5402L, VENDA);
        codeCfopMap.put(5403L, VENDA);
        codeCfopMap.put(5405L, VENDA);
        codeCfopMap.put(5551L, VENDA);
        codeCfopMap.put(5651L, VENDA);
        codeCfopMap.put(5652L, VENDA);
        codeCfopMap.put(5653L, VENDA);
        codeCfopMap.put(5654L, VENDA);
        codeCfopMap.put(5655L, VENDA);
        codeCfopMap.put(5656L, VENDA);
        codeCfopMap.put(5667L, VENDA);
        codeCfopMap.put(6101L, VENDA);
        codeCfopMap.put(6102L, VENDA);
        codeCfopMap.put(6103L, VENDA);
        codeCfopMap.put(6104L, VENDA);
        codeCfopMap.put(6105L, VENDA);
        codeCfopMap.put(6106L, VENDA);
        codeCfopMap.put(6107L, VENDA);
        codeCfopMap.put(6108L, VENDA);
        codeCfopMap.put(6109L, VENDA);
        codeCfopMap.put(6110L, VENDA);
        codeCfopMap.put(6111L, VENDA);
        codeCfopMap.put(6112L, VENDA);
        codeCfopMap.put(6113L, VENDA);
        codeCfopMap.put(6114L, VENDA);
        codeCfopMap.put(6115L, VENDA);
        codeCfopMap.put(6116L, VENDA);
        codeCfopMap.put(6117L, VENDA);
        codeCfopMap.put(6118L, VENDA);
        codeCfopMap.put(6119L, VENDA);
        codeCfopMap.put(6120L, VENDA);
        codeCfopMap.put(6122L, VENDA);
        codeCfopMap.put(6123L, VENDA);
        codeCfopMap.put(6250L, VENDA);
        codeCfopMap.put(6251L, VENDA);
        codeCfopMap.put(6252L, VENDA);
        codeCfopMap.put(6253L, VENDA);
        codeCfopMap.put(6254L, VENDA);
        codeCfopMap.put(6255L, VENDA);
        codeCfopMap.put(6256L, VENDA);
        codeCfopMap.put(6257L, VENDA);
        codeCfopMap.put(6258L, VENDA);
        codeCfopMap.put(6401L, VENDA);
        codeCfopMap.put(6402L, VENDA);
        codeCfopMap.put(6403L, VENDA);
        codeCfopMap.put(6404L, VENDA);
        codeCfopMap.put(6551L, VENDA);
        codeCfopMap.put(6651L, VENDA);
        codeCfopMap.put(6652L, VENDA);
        codeCfopMap.put(6653L, VENDA);
        codeCfopMap.put(6654L, VENDA);
        codeCfopMap.put(6655L, VENDA);
        codeCfopMap.put(6656L, VENDA);
        codeCfopMap.put(6667L, VENDA);
        codeCfopMap.put(7100L, VENDA);
        codeCfopMap.put(7101L, VENDA);
        codeCfopMap.put(7102L, VENDA);
        codeCfopMap.put(7105L, VENDA);
        codeCfopMap.put(7106L, VENDA);
        codeCfopMap.put(7127L, VENDA);
        codeCfopMap.put(7250L, VENDA);
        codeCfopMap.put(7251L, VENDA);
        codeCfopMap.put(7551L, VENDA);
        codeCfopMap.put(7651L, VENDA);
        codeCfopMap.put(7654L, VENDA);
        codeCfopMap.put(7667L, VENDA);

        /*Remesas*/
        codeCfopMap.put(5414L, REMIITTANCES);
        codeCfopMap.put(5415L, REMIITTANCES);
        codeCfopMap.put(5451L, REMIITTANCES);
        codeCfopMap.put(5500L, REMIITTANCES);
        codeCfopMap.put(5501L, REMIITTANCES);
        codeCfopMap.put(5502L, REMIITTANCES);
        codeCfopMap.put(5504L, REMIITTANCES);
        codeCfopMap.put(5505L, REMIITTANCES);
        codeCfopMap.put(5554L, REMIITTANCES);
        codeCfopMap.put(5657L, REMIITTANCES);
        codeCfopMap.put(5663L, REMIITTANCES);
        codeCfopMap.put(5666L, REMIITTANCES);
        codeCfopMap.put(5901L, REMIITTANCES);
        codeCfopMap.put(5904L, REMIITTANCES);
        codeCfopMap.put(5905L, REMIITTANCES);
        codeCfopMap.put(5908L, REMIITTANCES);
        codeCfopMap.put(5910L, REMIITTANCES);
        codeCfopMap.put(5911L, REMIITTANCES);
        codeCfopMap.put(5912L, REMIITTANCES);
        codeCfopMap.put(5914L, REMIITTANCES);
        codeCfopMap.put(5915L, REMIITTANCES);
        codeCfopMap.put(5917L, REMIITTANCES);
        codeCfopMap.put(5920L, REMIITTANCES);
        codeCfopMap.put(5923L, REMIITTANCES);
        codeCfopMap.put(5924L, REMIITTANCES);
        codeCfopMap.put(5934L, REMIITTANCES);
        codeCfopMap.put(6414L, REMIITTANCES);
        codeCfopMap.put(6500L, REMIITTANCES);
        codeCfopMap.put(6501L, REMIITTANCES);
        codeCfopMap.put(6502L, REMIITTANCES);
        codeCfopMap.put(6504L, REMIITTANCES);
        codeCfopMap.put(6505L, REMIITTANCES);
        codeCfopMap.put(6554L, REMIITTANCES);
        codeCfopMap.put(6657L, REMIITTANCES);
        codeCfopMap.put(6663L, REMIITTANCES);
        codeCfopMap.put(6666L, REMIITTANCES);
        codeCfopMap.put(6901L, REMIITTANCES);
        codeCfopMap.put(6904L, REMIITTANCES);
        codeCfopMap.put(6905L, REMIITTANCES);
        codeCfopMap.put(6908L, REMIITTANCES);
        codeCfopMap.put(6910L, REMIITTANCES);
        codeCfopMap.put(6911L, REMIITTANCES);
        codeCfopMap.put(6912L, REMIITTANCES);
        codeCfopMap.put(6914L, REMIITTANCES);
        codeCfopMap.put(6915L, REMIITTANCES);
        codeCfopMap.put(6917L, REMIITTANCES);
        codeCfopMap.put(6920L, REMIITTANCES);
        codeCfopMap.put(6923L, REMIITTANCES);
        codeCfopMap.put(6924L, REMIITTANCES);
        codeCfopMap.put(6934L, REMIITTANCES);

        /*TRANSFERÊNCIAS */
        codeCfopMap.put(1150L, TRANSFERS);
        codeCfopMap.put(1151L, TRANSFERS);
        codeCfopMap.put(1152L, TRANSFERS);
        codeCfopMap.put(1153L, TRANSFERS);
        codeCfopMap.put(1154L, TRANSFERS);
        codeCfopMap.put(1408L, TRANSFERS);
        codeCfopMap.put(1409L, TRANSFERS);
        codeCfopMap.put(1552L, TRANSFERS);
        codeCfopMap.put(1557L, TRANSFERS);
        codeCfopMap.put(1558L, TRANSFERS);
        codeCfopMap.put(1559L, TRANSFERS);
        codeCfopMap.put(2150L, TRANSFERS);
        codeCfopMap.put(2151L, TRANSFERS);
        codeCfopMap.put(2152L, TRANSFERS);
        codeCfopMap.put(2153L, TRANSFERS);
        codeCfopMap.put(2154L, TRANSFERS);
        codeCfopMap.put(2408L, TRANSFERS);
        codeCfopMap.put(2409L, TRANSFERS);
        codeCfopMap.put(2552L, TRANSFERS);
        codeCfopMap.put(2557L, TRANSFERS);
        codeCfopMap.put(2658L, TRANSFERS);
        codeCfopMap.put(2659L, TRANSFERS);
        codeCfopMap.put(5150L, TRANSFERS);
        codeCfopMap.put(5151L, TRANSFERS);
        codeCfopMap.put(5152L, TRANSFERS);
        codeCfopMap.put(5153L, TRANSFERS);
        codeCfopMap.put(5154L, TRANSFERS);
        codeCfopMap.put(5155L, TRANSFERS);
        codeCfopMap.put(5156L, TRANSFERS);
        codeCfopMap.put(5408L, TRANSFERS);
        codeCfopMap.put(5409L, TRANSFERS);
        codeCfopMap.put(5552L, TRANSFERS);
        codeCfopMap.put(5557L, TRANSFERS);
        codeCfopMap.put(5601L, TRANSFERS);
        codeCfopMap.put(5602L, TRANSFERS);
        codeCfopMap.put(5605L, TRANSFERS);
        codeCfopMap.put(5658L, TRANSFERS);
        codeCfopMap.put(5659L, TRANSFERS);
        codeCfopMap.put(6150L, TRANSFERS);
        codeCfopMap.put(6151L, TRANSFERS);
        codeCfopMap.put(6152L, TRANSFERS);
        codeCfopMap.put(6153L, TRANSFERS);
        codeCfopMap.put(6155L, TRANSFERS);
        codeCfopMap.put(6156L, TRANSFERS);
        codeCfopMap.put(6408L, TRANSFERS);
        codeCfopMap.put(6409L, TRANSFERS);
        codeCfopMap.put(6552L, TRANSFERS);
        codeCfopMap.put(6557L, TRANSFERS);
        codeCfopMap.put(6658L, TRANSFERS);
        codeCfopMap.put(6659L, TRANSFERS);

        /*Devoluciones*/
        codeCfopMap.put(1200L, BACK);
        codeCfopMap.put(1201L, BACK);
        codeCfopMap.put(1202L, BACK);
        codeCfopMap.put(1203L, BACK);
        codeCfopMap.put(1204L, BACK);
        codeCfopMap.put(1208L, BACK);
        codeCfopMap.put(1209L, BACK);
        codeCfopMap.put(1410L, BACK);
        codeCfopMap.put(1411L, BACK);
        codeCfopMap.put(1553L, BACK);
        codeCfopMap.put(1660L, BACK);
        codeCfopMap.put(1661L, BACK);
        codeCfopMap.put(1662L, BACK);
        codeCfopMap.put(1918L, BACK);
        codeCfopMap.put(1919L, BACK);
        codeCfopMap.put(2200L, BACK);
        codeCfopMap.put(2201L, BACK);
        codeCfopMap.put(2202L, BACK);
        codeCfopMap.put(2203L, BACK);
        codeCfopMap.put(2204L, BACK);
        codeCfopMap.put(2208L, BACK);
        codeCfopMap.put(2209L, BACK);
        codeCfopMap.put(2410L, BACK);
        codeCfopMap.put(2411L, BACK);
        codeCfopMap.put(2553L, BACK);
        codeCfopMap.put(2660L, BACK);
        codeCfopMap.put(2661L, BACK);
        codeCfopMap.put(2662L, BACK);
        codeCfopMap.put(2918L, BACK);
        codeCfopMap.put(2919L, BACK);
        codeCfopMap.put(3200L, BACK);
        codeCfopMap.put(3201L, BACK);
        codeCfopMap.put(3202L, BACK);
        codeCfopMap.put(3211L, BACK);
        codeCfopMap.put(3503L, BACK);
        codeCfopMap.put(3553L, BACK);
        codeCfopMap.put(5200L, BACK);
        codeCfopMap.put(5201L, BACK);
        codeCfopMap.put(5202L, BACK);
        codeCfopMap.put(5208L, BACK);
        codeCfopMap.put(5209L, BACK);
        codeCfopMap.put(5210L, BACK);
        codeCfopMap.put(5410L, BACK);
        codeCfopMap.put(5411L, BACK);
        codeCfopMap.put(5412L, BACK);
        codeCfopMap.put(5413L, BACK);
        codeCfopMap.put(5503L, BACK);
        codeCfopMap.put(5553L, BACK);
        codeCfopMap.put(5556L, BACK);
        codeCfopMap.put(5660L, BACK);
        codeCfopMap.put(5661L, BACK);
        codeCfopMap.put(5662L, BACK);
        codeCfopMap.put(5918L, BACK);
        codeCfopMap.put(5919L, BACK);
        codeCfopMap.put(5921L, BACK);
        codeCfopMap.put(6200L, BACK);
        codeCfopMap.put(6201L, BACK);
        codeCfopMap.put(6202L, BACK);
        codeCfopMap.put(6208L, BACK);
        codeCfopMap.put(6209L, BACK);
        codeCfopMap.put(6210L, BACK);
        codeCfopMap.put(6410L, BACK);
        codeCfopMap.put(6411L, BACK);
        codeCfopMap.put(6212L, BACK);
        codeCfopMap.put(6213L, BACK);
        codeCfopMap.put(6503L, BACK);
        codeCfopMap.put(6553L, BACK);
        codeCfopMap.put(6555L, BACK);
        codeCfopMap.put(6556L, BACK);
        codeCfopMap.put(6660L, BACK);
        codeCfopMap.put(6661L, BACK);
        codeCfopMap.put(6662L, BACK);
        codeCfopMap.put(6918L, BACK);
        codeCfopMap.put(6919L, BACK);
        codeCfopMap.put(6921L, BACK);
        codeCfopMap.put(7200L, BACK);
        codeCfopMap.put(7201L, BACK);
        codeCfopMap.put(7202L, BACK);
        codeCfopMap.put(7210L, BACK);
        codeCfopMap.put(7211L, BACK);
        codeCfopMap.put(7553L, BACK);
        codeCfopMap.put(7556L, BACK);

        /*Retorno*/
        codeCfopMap.put(1414L, RETURN);
        codeCfopMap.put(1415L, RETURN);
        codeCfopMap.put(1451L, RETURN);
        codeCfopMap.put(1452L, RETURN);
        codeCfopMap.put(1454L, RETURN);
        codeCfopMap.put(1664L, RETURN);
        codeCfopMap.put(1902L, RETURN);
        codeCfopMap.put(1904L, RETURN);
        codeCfopMap.put(1906L, RETURN);
        codeCfopMap.put(1907L, RETURN);
        codeCfopMap.put(1909L, RETURN);
        codeCfopMap.put(1913L, RETURN);
        codeCfopMap.put(1914L, RETURN);
        codeCfopMap.put(1916L, RETURN);
        codeCfopMap.put(1921L, RETURN);
        codeCfopMap.put(1925L, RETURN);
        codeCfopMap.put(2414L, RETURN);
        codeCfopMap.put(2415L, RETURN);
        codeCfopMap.put(2554L, RETURN);
        codeCfopMap.put(2664L, RETURN);
        codeCfopMap.put(2902L, RETURN);
        codeCfopMap.put(2904L, RETURN);
        codeCfopMap.put(2906L, RETURN);
        codeCfopMap.put(2907L, RETURN);
        codeCfopMap.put(2909L, RETURN);
        codeCfopMap.put(2913L, RETURN);
        codeCfopMap.put(2914L, RETURN);
        codeCfopMap.put(2916L, RETURN);
        codeCfopMap.put(2921L, RETURN);
        codeCfopMap.put(2925L, RETURN);
        codeCfopMap.put(5664L, RETURN);
        codeCfopMap.put(5665L, RETURN);
        codeCfopMap.put(5902L, RETURN);
        codeCfopMap.put(5903L, RETURN);
        codeCfopMap.put(5906L, RETURN);
        codeCfopMap.put(5907L, RETURN);
        codeCfopMap.put(5909L, RETURN);
        codeCfopMap.put(5913L, RETURN);
        codeCfopMap.put(5916L, RETURN);
        codeCfopMap.put(5925L, RETURN);
        codeCfopMap.put(6664L, RETURN);
        codeCfopMap.put(6665L, RETURN);
        codeCfopMap.put(6902L, RETURN);
        codeCfopMap.put(6903L, RETURN);
        codeCfopMap.put(6906L, RETURN);
        codeCfopMap.put(6907L, RETURN);
        codeCfopMap.put(6909L, RETURN);
        codeCfopMap.put(6913L, RETURN);
        codeCfopMap.put(6916L, RETURN);
        codeCfopMap.put(6925L, RETURN);

        /*SISTEMAS DE INTEGRAÇÃO*/
        codeCfopMap.put(1450L, INTEGRATION_SYSTEMS);

        /*Canceladas*/
        codeCfopMap.put(1205L, CANCELLED);
        codeCfopMap.put(1206L, CANCELLED);
        codeCfopMap.put(1207L, CANCELLED);
        codeCfopMap.put(2205L, CANCELLED);
        codeCfopMap.put(2206L, CANCELLED);
        codeCfopMap.put(2207L, CANCELLED);
        codeCfopMap.put(3205L, CANCELLED);
        codeCfopMap.put(3206L, CANCELLED);
        codeCfopMap.put(3207L, CANCELLED);
        codeCfopMap.put(5205L, CANCELLED);
        codeCfopMap.put(5206L, CANCELLED);
        codeCfopMap.put(5207L, CANCELLED);
        codeCfopMap.put(6205L, CANCELLED);
        codeCfopMap.put(6206L, CANCELLED);
        codeCfopMap.put(6207L, CANCELLED);
        codeCfopMap.put(7205L, CANCELLED);
        codeCfopMap.put(7206L, CANCELLED);
        codeCfopMap.put(7207L, CANCELLED);

        /*Lanzamiento*/
        codeCfopMap.put(1604L, LAUNCHING);
        codeCfopMap.put(1922L, LAUNCHING);
        codeCfopMap.put(1926L, LAUNCHING);
        codeCfopMap.put(1931L, LAUNCHING);
        codeCfopMap.put(2922L, LAUNCHING);
        codeCfopMap.put(2931L, LAUNCHING);
        codeCfopMap.put(3930L, LAUNCHING);
        codeCfopMap.put(5922L, LAUNCHING);
        codeCfopMap.put(5926L, LAUNCHING);
        codeCfopMap.put(5927L, LAUNCHING);
        codeCfopMap.put(5928L, LAUNCHING);
        codeCfopMap.put(5929L, LAUNCHING);
        codeCfopMap.put(5931L, LAUNCHING);
        codeCfopMap.put(6922L, LAUNCHING);
        codeCfopMap.put(6929L, LAUNCHING);
        codeCfopMap.put(6931L, LAUNCHING);
        codeCfopMap.put(7930L, LAUNCHING);
    }

    public CfopData() {
    }

    private static String getIn(List<InvoiceStatus> invoiceStatuses) {
        return invoiceStatuses
                .stream()
                .map(map -> String.valueOf(map.getValue()))
                .collect(joining(","));
    }

}
